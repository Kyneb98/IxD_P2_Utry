:host {
  display: block; /* Ensure component takes up space */
  position: absolute; /* Position relative to parent (.utry-content-area) */
  bottom: 0;          /* Stick to the bottom of the parent */
  left: 0;
  right: 0;
  z-index: 10;        /* Above other static content, below models */
 
}

.material-panel-wrapper {
  /* This wrapper is what animates */
  width: 100%;
  background-color: rgba(240, 240, 240, 0.98); /* Panel background */
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
  box-shadow: 0 -3px 10px rgba(0, 0, 0, 0.1);
  box-sizing: border-box;

  /* Start below viewport (adjust value based on header height) */
}

.panel-header {
  height: 40px; /* Height of the visible collapsed part */
  display: flex;
  justify-content: right; /* arrow placed on right side */
  
  align-items: center;
  cursor: pointer;
  background-color: inherit; /* Inherit wrapper background */
  /* Ensure rounded corners match wrapper */
  border-top-left-radius: 12px;
  border-top-right-radius: 12px;
}

.toggle-icon {
  color: #333; /* Darker icon color */
  margin-right: 15px;
}

.panel-content-area {
  padding: 10px 20px; /* Padding for the content */
  padding-top: 0; /* No top padding to align with header */
  box-sizing: border-box;
  gap:0;
  background-color: inherit;
}

.expansion-content {
  display: flex;
  align-items: center; /* Align items to the top */
  gap: 20px; /* Space between picture and details */
}




/* --- Column 1: Image --- */
.panel-section-title {
  display: block;         /* Default to block for left side */
  font-size: 1rem;        /* 16px */
  font-weight: 500;       /* Medium weight */   /* Space below title */
  color: #333;
  margin-bottom: 8px;
}


.fabric-picture-column {
  flex-shrink: 0; /* Prevent shrinking */
  /* Size is controlled by container inside */
}

.fabric-picture-container {
  width: 80px; /* Adjust size */
  height: 80px;
  border-radius: 50%;
  overflow: hidden;
  border: 2px solid #0d3080; /* Blue border */
  background-color: #fff;
}

.fabric-img {
  display: block;
  width: 100%;
  height: 100%;
  object-fit: cover;
}

/* --- Column 2: Details --- */
.fabric-details-column {
  flex-grow: 1;     /* Allow to take up space */
  flex-basis: 40%;  /* Suggest initial width */
  font-size: 0.9rem;
  line-height: 1.5;
  color: #333;
  text-align: left; /* Align text left */
}

.fabric-details-column p {
  margin: 0 0 4px 0; /* Adjust spacing */
}

.fabric-details-column strong {
  font-weight: bold;
}

/* --- Column 3: Scratchiness --- */
.scratchiness-column {
  flex-grow: 1;     /* Allow to take up space */
  flex-basis: 35%;  /* Suggest initial width */
  font-size: 0.9rem;
  color: #333;
  text-align: left; /* Align label left */
}

.scratchiness-column p {
  margin: 0 0 10px 0; /* Space above slider */
  
}

.scratchiness-slider {
  width: 100%;
}
.info-icon {
  font-size: 18px;      /* Icon size */
  width: 18px;
  height: 18px;
  color: #666;         /* Icon color */
  cursor: help;         /* Indicate it provides help/info */
  vertical-align: top; /* Align icon better with text */
}




/* --- Static Stretch Indicator --- */
.static-stretch-indicator {
  width: 100%;
  display: flex;
  flex-direction: column; /* Stack track and labels */
  align-items: stretch; /* Make track and label container full width */
  margin-top: 5px;
}

.stretch-track {
  width: 100%;        /* Track takes full width */
  height: 2px;        /* Thickness of the main line */
  background-color: #666; /* Color of the track line */
  position: relative; /* Context for the dot and ticks */
  margin-bottom: 8px; /* Space between track and labels */
}

/* Dot is always at the "Non" position */
.stretch-dot.non {
  position: absolute;
  top: 50%;
  /* Position slightly IN from the left edge for better visual */
  left: 10%; /* Or a small px value like 2px */
  transform: translate(0%, -50%); /* Adjust X if needed for perfect alignment over start of track */
  width: 12px; /* Smaller dot */
  height: 12px;
  background-color: #0d3080; /* Dark blue dot */
  border-radius: 50%;
  
}


/* Stretch Labels */
.label-container.stretch-labels {
  display: flex;
  justify-content: space-between; /* Distribute labels */
  width: 100%;
  font-size: 0.75rem; /* Even smaller labels */
  color: #555;
  padding: 0;
  box-sizing: border-box;
  position: relative; /* Allows ticks to be positioned relative to this */
}

.stretch-labels span {
  flex: 1 1 0px;
  text-align: center;
  position: relative; /* Context for its own tick mark */
  font-weight: normal;
  padding: 0 1px; /* Minimal padding */
  box-sizing: border-box;
  /* Ensure labels don't overlap excessively */
  min-width: 40px; /* Example, adjust based on text length */
}

/* Tick marks for each label - now positioned to intersect the track */
.stretch-labels span::before {
  content: '';
  position: absolute;
  bottom: calc(100% + 2px); /* Position just above the label text, aligned with track */
  /* (height of track / 2) + (height of tick / 2) for perfect centering on track.
     For bottom: calc(100% + (height of track - height of tick / 2) )
     Given track height 2px, tick height 8px, we want tick to go 3px into track and 5px above
     So bottom: 100% (base of text) + 2px (space) = bottom of tick relative to text.
     Let's try top instead.
  */
  top: -10px; /* Adjust this to align tick with the track. Track is above the labels. */
              /* (track_margin_bottom (8px) + track_height(2px) + desired_overlap_or_space ) */


  left: 50%;
  transform: translateX(-50%);
  width: 1px;         /* Thickness of the tick */
  height: 8px;        /* Height of the tick */
  background-color: #666; /* Match track color */
}

/* Hide the "Non" tick if the dot represents it */
.stretch-labels span:first-child::before {
  display: none;
}

/* Highlight "Non" label (or based on itemStretchLevel) */
.stretch-labels span.active-label {
  font-weight: bold;
  color: #0d3080;
}
/* --- End Static Stretch Indicator --- */





/* Responsive adjustments if needed */
@media (max-width: 480px) {
  .expansion-content {
    flex-direction: column;
    align-items: center; /* Center items when stacked */
    gap: 20px;
  }
  .contentleft, .contentright {
    width: 100%; /* Take full width when stacked */
    flex-basis: auto;
  }
  .fabric-details, .scratchiness-container {
    text-align: center;
  }
}